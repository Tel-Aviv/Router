<?xml version="1.0"?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>

  <system.diagnostics>
    <sources>
      <source name="System.IdentityModel" switchValue="Information,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="CustomListener">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Verbose,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
          <add name="CustomListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="path to ls" type="RouterListener.RouterTraceListener, RouterListener, Version=1.0.0.0, Culture=neutral, PublicKeyToken=401156825dd66377"
        name="CustomListener">
        <filter type="" />
      </add>
      <add initializeData="C:\logs\web_tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener"
        name="xml">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>

  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="AuthMapperExtension" type="AuthMapper.AuthBehaviorExtensionElement, AuthMapperExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=7f5dbd943ffb394c" />
      </behaviorExtensions>
    </extensions>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="false"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true"
        maxMessagesToLog="3000" maxSizeOfMessageToLog="2000" />
      <endToEndTracing propagateActivity="true" activityTracing="true"
        messageFlowTracing="true" />
    </diagnostics>

    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_Services">
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
        <binding name="BasicHttpBinding_Router">
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    
    <services>
      <service behaviorConfiguration="routingData" name="System.ServiceModel.Routing.RoutingService">
        <endpoint address="" behaviorConfiguration="" binding="basicHttpBinding"
          bindingConfiguration="BasicHttpBinding_Router" contract="System.ServiceModel.Routing.IRequestReplyRouter" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <behaviors>
      <endpointBehaviors>
        <behavior name="AuthMapperBehavior">
          <AuthMapperExtension />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="routingData">
          <routing routeOnHeadersOnly="false" filterTableName="routingTable1" />
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <client>
      <endpoint address="http://iispprlb.tlv.gov.il/TlvBusinessLogic/Applications/TlvFormsServices/tlvFormsBniyaWS/tlvFormsBniyaWS.svc"
        behaviorConfiguration="AuthMapperBehavior" binding="basicHttpBinding"
        bindingConfiguration="BasicHttpBinding_Services" contract="*"
        name="Bniya" />
      <endpoint address="http://iispprlb/TlvBusinessLogic/Applications/TlvFormsServices/TlvParkingObjectionService/Service.asmx"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Services"
        contract="*" name="Parking" />
      <endpoint address="http://iispprlb/TlvBusinessLogic/Applications/TlvFormsServices/tlvTagRequestWS/tlvTagRequestWS.asmx"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Services"
        contract="*" name="Tag" />
      <endpoint address="http://preprodiis01.tlv.gov.il/Appointments/Services/ReservationService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Services"
        contract="*" name="Reservation" />
    </client>
    <routing>
      <filters>
        <filter name="GetBniya" filterType="Action" filterData="http://tempuri.org/ItlvFormsBniyaWS/GetTlvBniyaData"/>
        <filter name="SetBnita" filterType="Action" filterData="http://tempuri.org/ItlvFormsBniyaWS/SetTlvBniyaData"/>
        
        <filter name="parking_ApplyObjection" filterType="Action" filterData="http://tlv.gov.il/Parking/TlvTickectObjection/ApplyObjection"/>
        <filter name="parking_CheckReport" filterType="Action" filterData="http://tlv.gov.il/Parking/TlvTickectObjection/CheckReport"/>
        <filter name="parking_CheckStatus" filterType="Action" filterData="http://tlv.gov.il/Parking/TlvTickectObjection/CheckStatus"/>
        <filter name="parking_GetStatusByID" filterType="Action" filterData="http://tlv.gov.il/Parking/TlvTickectObjection/GetStatusByID"/>
        <filter name="parking_getReportInfo" filterType="Action" filterData="http://tlv.gov.il/Parking/TlvTickectObjection/getReportInfo"/>

        <filter name="tag_ApplyObjection" filterType="Action" filterData="http://tlv.gov.il/TlvBusinessLogic/Applications/tlvTagRequestWS/ApplyObjection"/>
        <filter name="tag_CheckStatus" filterType="Action" filterData="http://tlv.gov.il/TlvBusinessLogic/Applications/tlvTagRequestWS/CheckStatus"/>
        <filter name="tag_DeletePniya" filterType="Action" filterData="http://tlv.gov.il/TlvBusinessLogic/Applications/tlvTagRequestWS/DeletePniya"/>
        <filter name="tag_GetExpiredTagsByID" filterType="Action" filterData="http://tlv.gov.il/TlvBusinessLogic/Applications/tlvTagRequestWS/GetExpiredTagsByID"/>
        <filter name="tag_GetStatusByID" filterType="Action" filterData="http://tlv.gov.il/TlvBusinessLogic/Applications/tlvTagRequestWS/GetStatusByID"/>

        <filter name="reservation_SetClientAppointment" filterType="Action" filterData="http://q-wizard.com/ReservationServices/IReservationService/SetClientAppointment"/>
        <filter name="reservation_CancelClientAppointment" filterType="Action" filterData="http://q-wizard.com/ReservationServices/IReservationService/CancelClientAppointment"/>
        <filter name="reservation_ChangeClientAppointment" filterType="Action" filterData="http://q-wizard.com/ReservationServices/IReservationService/ChangeClientAppointment"/>
        <filter name="reservation_GetPossibleAppointmentDates" filterType="Action" filterData="http://q-wizard.com/ReservationServices/IReservationService/GetPossibleAppointmentDates"/>
        <filter name="reservation_GetClientAppointments" filterType="Action" filterData="http://q-wizard.com/ReservationServices/IReservationService/GetClientAppointments"/>
        <filter name="reservation_GetPossibleAppointmentHours" filterType="Action" filterData="http://q-wizard.com/ReservationServices/IReservationService/GetPossibleAppointmentHours"/>

      </filters>
      <filterTables>
        <filterTable name="routingTable1">
          
          <add filterName="GetBniya" endpointName="Bniya"/>
          <add filterName="SetBnita" endpointName="Bniya"/>

          <add filterName="parking_ApplyObjection" endpointName="Parking" />
          <add filterName="parking_CheckReport" endpointName="Parking" />
          <add filterName="parking_CheckStatus" endpointName="Parking" />
          <add filterName="parking_GetStatusByID" endpointName="Parking" />
          <add filterName="parking_getReportInfo" endpointName="Parking" />

          <add filterName="tag_ApplyObjection" endpointName="Tag" />
          <add filterName="tag_CheckStatus" endpointName="Tag" />
          <add filterName="tag_DeletePniya" endpointName="Tag" />
          <add filterName="tag_GetExpiredTagsByID" endpointName="Tag" />
          <add filterName="tag_GetStatusByID" endpointName="Tag" />

          <add filterName="reservation_SetClientAppointment" endpointName="Reservation" />
          <add filterName="reservation_CancelClientAppointment" endpointName="Reservation" />
          <add filterName="reservation_ChangeClientAppointment" endpointName="Reservation" />
          <add filterName="reservation_GetPossibleAppointmentDates" endpointName="Reservation" />
          <add filterName="reservation_GetClientAppointments" endpointName="Reservation" />
          <add filterName="reservation_GetPossibleAppointmentHours" endpointName="Reservation" />

        </filterTable>
      </filterTables>
      <!--<backupLists>
        <backupList name="backupEndpointList">
          <add endpointName="ServiceTwo" />
        </backupList>
      </backupLists>-->
    </routing>
    <protocolMapping>
      <add scheme="http" binding="wsHttpBinding"/>
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true" />

  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="false"/>
  </system.webServer>

</configuration>
